{"name":"SolidSoils4Arduino","tagline":"C# .NET - Arduino library supporting simultaneous serial ASCII, Firmata and I2C communication","body":"# SolidSoils4Arduino\r\n\r\nSolidSoils4Arduino is a client library built on the .NET Framework 4.5 and providing an easy way to interact with Arduino boards.\r\nThe library implements the main communication protocols, the first of which is the Firmata protocol.\r\nIt aims to make communication with Arduino boards in MS .NET projects easier\r\nthrough a comprehensive and consistent set of methods and events.\r\n\r\nThe library supports the following protocols:\r\n\r\n1. Serial (ASCII) messaging\r\n2. Firmata\r\n3. I2C (as it has become part of Firmata)\r\n\r\nThe protocols mentioned can be used simultaneously. The library brokers all incoming message types\r\nand directs them to the appropriate requestors (synchronous as well as asynchronous) and events.\r\n\r\nTechnology used: Microsoft .NET/C# v4.5\r\n\r\n### A basic code example\r\n\r\n    using Solid.Arduino.Firmata;\r\n\r\n    (...)\r\n\r\n    var connection = new SerialConnection(\"COM3\", SerialBaudRate.Bps_57600);\r\n\tvar session = new ArduinoSession(connection, timeOut: 250);\r\n    // Cast to interface done, just for the sake of this demo.\r\n\tIFirmataProtocol firmata = (IFirmataProtocol)session;\r\n\t\r\n\tFirmware firm = firmata.GetFirmware();\r\n\tConsole.WriteLine(\"Firmware: {0} {1}.{2}\", firm.Name, firm.MajorVersion, firm.MinorVersion);\r\n\t\r\n\tProtocolVersion version = firmata.GetProtocolVersion();\r\n\tConsole.WriteLine(\"Protocol version: {0}.{1}\", version.Major, version.Minor);\r\n\t\r\n\tBoardCapability caps = firmata.GetBoardCapability();\r\n\tConsole.WriteLine(\"Board Capabilities:\");\r\n\t\r\n\tforeach (var pincap in caps.PinCapabilities)\r\n\t{\r\n\t    Console.WriteLine(\"Pin {0}: Input: {1}, Output: {2}, Analog: {3}, Analog-Res: {4}, PWM: {5}, PWM-Res: {6}, Servo: {7}, Servo-Res: {8}\",\r\n\t        pincap.PinNumber,\r\n\t\t\tpincap.DigitalInput,\r\n\t\t\tpincap.DigitalOutput,\r\n\t\t\tpincap.Analog,\r\n\t\t\tpincap.AnalogResolution,\r\n\t\t\tpincap.Pwm,\r\n\t\t\tpincap.PwmResolution,\r\n\t        pincap.Servo,\r\n\t\t\tpincap.ServoResolution);\r\n\t}\r\n\tConsole.WriteLine();\r\n    Console.ReadLine();\r\n\r\n## Current status\r\n\r\n**v0.2**\r\n\r\nCode complete for the library core. (Beta)\r\n\r\n## Milestones\r\n\r\n1. Firmata protocol implemented, unit- and integration-tested.\r\n2. I2C protocol implemented and unit-tested.\r\n3. Serial ASCII protocol implemented and unit-tested.\r\n4. API fully documented.\r\n5. IObservable methods implemented (to be unittested).\r\n6. Mono support added.\r\n\r\n## Upcoming\r\n1. Finish unit tests for latest additions.\r\n2. Develop a WPF application demonstrating the library (project Solid.Arduino.Monitor).\r\n3. Release the first version.\r\n\r\n## Contributing\r\nIf you discover a bug or would like to propose a new feature,\r\nplease open a new [issue](https://github.com/solidsoils/arduino/issues?sort=created&state=open).\r\n\r\nTo contribute, fork this respository and create a new topic branch for the bug,\r\nfeature or other existing issue you are addressing. Submit the pull request against the *master* branch.\r\n\r\nIf you would like to contribute but don't have a specific bugfix or new feature to contribute,\r\nyou can take on an existing issue. Add a comment to\r\nthe issue to express your intent to begin work and/or to get any additional information about the issue.\r\n\r\nPlease, test your contributed code thoroughly. In your pull request, describe tests performed to ensure \r\nthat no existing code is broken and that any changes maintain backwards compatibility with the existing API.\r\n","google":"S24A-141117-01","note":"Don't delete this file! It's used internally to help with page regeneration."}